{"version":3,"sources":["images/404.png","images/logo.svg","components/ui/Button.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/ImagePopup.js","components/PopupWithForm.js","contexts/StatusRenderContext.js","components/ui/ButtonSubmitForm.js","components/ui/InputForm.js","components/ui/ErrorSpan.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeletePlacePopup.js","utils/Api.js","components/AdventureBoard.js","components/PageNotFound.js","components/Header.js","components/Footer.js","components/App.js","index.js"],"names":["module","exports","MemodButton","React","memo","action","label","onBtnClick","optionalClasses","btnClasses","classnames","btn","type","aria-label","className","onClick","CurrentUserContext","createContext","MemodCard","name","link","owner","likes","_id","onCardClick","onCardLike","onConfirmDelete","currentUser","useContext","isMyCard","isMyLike","some","btnLikeClasses","btn_type_like","src","alt","length","cardId","MemodMain","cards","onEditAvatar","onEditProfile","onAddPlace","avatar","about","map","card","index","key","MemodImagePopup","onClose","isOpen","popupClasses","popup","popup_disabled","useEffect","handleEscListener","evt","document","addEventListener","removeEventListener","id","target","classList","contains","MemodPopupWithForm","title","onSubmitForm","children","linkClose","useCallback","method","onSubmit","preventDefault","noValidate","StatusRenderContext","MemodButtonSubmitForm","text","isActive","isRenderer","btn_type_submit","disabled","color","height","width","MemodInputForm","placeholder","required","min","max","pattern","value","onInputChange","minLength","maxLength","onChange","MemodErrorSpan","errorText","MemodEditProfilePopup","onUpdaterUser","useState","setName","description","setDescription","errorName","setErrorName","errorDescription","setErrorDescription","isNameValid","setIsNameValid","isDescriptionValid","setIsDescriptionValid","isValid","setIsValid","hideErrors","validationMessage","validity","valid","MemodEditAvatarPopup","onUpdaterUserAvatar","inputUrl","useRef","setAvatar","errorAvatar","setErrorAvatar","isAvatarValid","setIsAvatarValid","current","ref","MemodAddPlacePopup","onPost","setLink","errorLink","setErrorLink","isLinkValid","setIsLinkValid","MemodDeletePlacePopup","onDelete","api","baseUrl","headers","this","_baseUrl","_headers","Promise","all","_getUserInfo","_getInitialCards","response","ok","json","reject","status","fetch","then","_returnResponse","myId","body","JSON","stringify","isLiked","data","authorization","AdventureBoard","setIsRenderer","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeletePlacePopupOpen","setIsDeletePlacePopupOpen","isPreviewPopupOpen","setIsPreviewPopupOpen","selectedCard","setSelectedCard","selectedDeleteCardId","setSelectedDeleteCardId","setCurrentUser","setCards","getInitialData","userData","cardsData","catch","error","console","log","handleCloseAllPopups","Provider","infoCard","likeCard","newCards","updateUserInfo","newUserData","updateUserAvatar","postCard","newCard","deleteCard","filter","PageNotFound","notFoundPage","to","MemodHeader","logoHeader","MemodFooter","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a7aaad06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.59083296.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","import React from 'react';\nimport classnames from 'classnames';\n\nfunction Button({ action, label, onBtnClick, optionalClasses }) {\n  const btnClasses = classnames({\n    btn: true,\n    [`btn_type_${action}`]: action || false,\n    [`${optionalClasses}`]: optionalClasses,\n  });\n\n  return (\n    <button\n      type=\"button\"\n      aria-label={label}\n      className={btnClasses}\n      onClick={onBtnClick}\n    ></button>\n  );\n}\n\nconst MemodButton = React.memo(Button);\nexport default MemodButton;\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","import React, { useContext } from 'react';\nimport classnames from 'classnames';\n\nimport Button from './ui/Button';\n\nimport { CurrentUserContext } from './../contexts/CurrentUserContext';\n\nfunction Card({\n  name,\n  link,\n  owner,\n  likes,\n  _id,\n  onCardClick,\n  onCardLike,\n  onConfirmDelete,\n}) {\n  const currentUser = useContext(CurrentUserContext);\n\n  const isMyCard = owner._id === currentUser._id;\n  const isMyLike = likes.some((owner) => owner._id === currentUser._id);\n\n  const btnLikeClasses = classnames({\n    btn_type_like: isMyLike,\n    'element__btn-like': true,\n  });\n\n  const handleCardClick = () => onCardClick({ name, link });\n  const handleCardLike = () => onCardLike({ likes: likes, cardId: _id });\n  const handleConfirmDelete = () => onConfirmDelete({ cardId: _id });\n\n  return (\n    <div className=\"element\">\n      <img\n        src={link}\n        alt={name}\n        className=\"element__img\"\n        onClick={handleCardClick}\n      />\n      <h2 className=\"element__title\">{name}</h2>{' '}\n      <span className=\"element__likes\">{likes.length}</span>\n      <Button\n        action=\"not-like\"\n        label=\"лайкнуть\"\n        optionalClasses={btnLikeClasses}\n        onBtnClick={handleCardLike}\n      />\n      {isMyCard && (\n        <Button\n          action=\"trash\"\n          label=\"удалить\"\n          optionalClasses=\"element__btn-trash\"\n          onBtnClick={handleConfirmDelete}\n        />\n      )}\n    </div>\n  );\n}\n\nconst MemodCard = React.memo(Card);\nexport default MemodCard;\n","import React, { useContext } from 'react';\nimport Card from './Card';\n\nimport Button from './ui/Button';\n\nimport { CurrentUserContext } from './../contexts/CurrentUserContext';\n\nfunction Main({\n  cards,\n  onEditAvatar,\n  onEditProfile,\n  onAddPlace,\n  onCardClick,\n  onCardLike,\n  onConfirmDelete,\n}) {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <img\n          className=\"profile__photo\"\n          src={currentUser.avatar}\n          alt=\"Фотография пользователя\"\n        />\n        <Button\n          action=\"update\"\n          label=\"обновить\"\n          optionalClasses=\"profile__btn-update\"\n          onBtnClick={onEditAvatar}\n        />\n        <div className=\"profile__info\">\n          <h2 className=\"profile__user-name\">{currentUser.name}</h2>\n          <Button\n            action=\"edit\"\n            label=\"редактировать\"\n            optionalClasses=\"profile__btn-edit\"\n            onBtnClick={onEditProfile}\n          />\n          <p className=\"profile__user-hobby\">{currentUser.about}</p>\n        </div>\n        <Button\n          action=\"add\"\n          label=\"добавить\"\n          optionalClasses=\"profile__btn-add\"\n          onBtnClick={onAddPlace}\n        />\n      </section>\n      <section className=\"elements\">\n        {cards.map((card, index) => {\n          return (\n            <Card\n              key={`${index}-${card._id}`}\n              {...card}\n              onCardClick={onCardClick}\n              onCardLike={onCardLike}\n              onConfirmDelete={onConfirmDelete}\n            />\n          );\n        })}\n      </section>\n    </main>\n  );\n}\n\nconst MemodMain = React.memo(Main);\nexport default MemodMain;\n","import React, { useEffect } from 'react';\nimport classnames from 'classnames';\n\nimport Button from './ui/Button';\n\nfunction ImagePopup({ name, link, onClose, isOpen }) {\n  const popupClasses = classnames({\n    popup: true,\n    popup_disabled: !isOpen,\n  });\n\n  useEffect(() => {\n    const handleEscListener = (evt) => {\n      if (evt.key === 'Escape') onClose();\n    };\n\n    if (isOpen) document.addEventListener('keydown', handleEscListener);\n\n    return () => document.removeEventListener('keydown', handleEscListener);\n  }, [isOpen, onClose]);\n\n  const handleOverlayClick = (evt) => {\n    if (evt.target.classList.contains('popup')) onClose();\n  };\n\n  return (\n    <section\n      className={popupClasses}\n      id=\"popupCardPreview\"\n      onClick={handleOverlayClick}\n    >\n      <div className=\"popup__container\">\n        <section className=\"preview-image popup__preview\">\n          <Button\n            action=\"close\"\n            label=\"закрыть\"\n            optionalClasses=\"popup__btn-close preview-image__btn-close\"\n            onBtnClick={onClose}\n          />\n          <img\n            src={link}\n            alt={name}\n            className=\"preview-image__img popup__img\"\n          />\n          <h3 className=\"preview-image__title popup__title\">{name}</h3>\n        </section>\n      </div>\n    </section>\n  );\n}\n\nconst MemodImagePopup = React.memo(ImagePopup);\nexport default MemodImagePopup;\n","import React, { useEffect, useCallback } from 'react';\nimport classnames from 'classnames';\n\nimport Button from './ui/Button';\n\nfunction PopupWithForm({\n  name,\n  title,\n  isOpen = false,\n  onClose,\n  onSubmitForm,\n  children,\n}) {\n  const popupClasses = classnames({\n    popup: true,\n    popup_disabled: !isOpen,\n  });\n\n  const linkClose = useCallback(onClose);\n\n  useEffect(() => {\n    const handleEscListener = (evt) => {\n      if (evt.key === 'Escape') linkClose();\n    };\n\n    if (isOpen) document.addEventListener('keydown', handleEscListener);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscListener);\n    };\n  }, [isOpen, linkClose]);\n\n  const handleOverlayClick = (evt) => {\n    if (evt.target.classList.contains('popup')) onClose(); // ???\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    onSubmitForm();\n  };\n\n  return (\n    <section\n      className={popupClasses}\n      id={`popup${name}`}\n      onClick={handleOverlayClick}\n    >\n      <div className=\"popup__container\">\n        <Button\n          action=\"close\"\n          label=\"закрыть\"\n          optionalClasses=\"popup__btn-close\"\n          onBtnClick={onClose}\n        />\n        <h3 className=\"popup__title\">{title}</h3>\n        <form\n          name={name}\n          method=\"post\"\n          action=\"#\"\n          className=\"form popup__form\"\n          onSubmit={handleSubmit}\n          noValidate\n        >\n          {children}\n        </form>\n      </div>\n    </section>\n  );\n}\n\nconst MemodPopupWithForm = React.memo(PopupWithForm);\nexport default MemodPopupWithForm;\n","import React from 'react';\n\nexport const StatusRenderContext = React.createContext();\n","import React, { useContext } from 'react';\nimport classnames from 'classnames';\nimport Loader from 'react-loader-spinner';\n\nimport { StatusRenderContext } from './../../contexts/StatusRenderContext';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nfunction ButtonSubmitForm({ text, label, isActive }) {\n  const isRenderer = useContext(StatusRenderContext);\n\n  const btnClasses = classnames({\n    btn: true,\n    btn_type_submit: true,\n    'form__btn-submit': true,\n    'form__btn-submit_disabled': !isActive,\n  });\n\n  return (\n    <button\n      type=\"submit\"\n      className={btnClasses}\n      aria-label={label}\n      disabled={!isActive}\n    >\n      {isRenderer ? (\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#ffffff\"\n          height={80}\n          width={80}\n          className=\"btn__spinner\"\n        />\n      ) : (\n        text\n      )}\n    </button>\n  );\n}\n\nconst MemodButtonSubmitForm = React.memo(ButtonSubmitForm);\nexport default MemodButtonSubmitForm;\n","import React from 'react';\n\nfunction InputForm({\n  type = 'text',\n  placeholder,\n  name,\n  required = false,\n  length = { min: 0, max: 500 },\n  pattern = '.*',\n  value = '',\n  onInputChange,\n}) {\n  return (\n    <input\n      type={type}\n      className=\"input form__input\"\n      placeholder={placeholder}\n      name={name}\n      required={required}\n      minLength={length.min}\n      maxLength={length.max}\n      pattern={pattern}\n      value={value}\n      onChange={onInputChange}\n    />\n  );\n}\n\nconst MemodInputForm = React.memo(InputForm);\nexport default MemodInputForm;\n","import React from 'react';\n\nfunction ErrorSpan({ isActive, errorText }) {\n  return (\n    <span\n      className={`form__input-error ${!isActive && 'form__input-error_active'}`}\n    >\n      {errorText}\n    </span>\n  );\n}\n\nconst MemodErrorSpan = React.memo(ErrorSpan);\nexport default MemodErrorSpan;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmitForm from './ui/ButtonSubmitForm';\nimport InputForm from './ui/InputForm';\nimport ErrorSpan from './ui/ErrorSpan';\n\nimport { CurrentUserContext } from './../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdaterUser }) {\n  const currentUser = useContext(CurrentUserContext);\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [errorName, setErrorName] = useState('');\n  const [errorDescription, setErrorDescription] = useState('');\n  const [isNameValid, setIsNameValid] = useState(false);\n  const [isDescriptionValid, setIsDescriptionValid] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n\n  useEffect(() => {\n    const { name, about } = currentUser;\n    setName(name);\n    setDescription(about);\n  }, [currentUser]);\n\n  useEffect(() => {\n    hideErrors();\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (isNameValid && isDescriptionValid) setIsValid(true);\n\n    return () => {\n      setIsValid(false);\n    };\n  }, [isNameValid, isDescriptionValid]);\n\n  const hideErrors = () => {\n    setErrorName('');\n    setErrorDescription('');\n    setIsNameValid(true);\n    setIsDescriptionValid(true);\n  };\n\n  const handleNameChange = (evt) => {\n    const { value, validationMessage, validity } = evt.target;\n    setName(value);\n    if (validationMessage !== errorName) setErrorName(validationMessage);\n    if (validity.valid) setIsNameValid(true);\n    else setIsNameValid(false);\n  };\n\n  const handleDescriptionChange = (evt) => {\n    const { value, validationMessage, validity } = evt.target;\n    setDescription(value);\n    if (validationMessage !== errorDescription)\n      setErrorDescription(validationMessage);\n    if (validity.valid) setIsDescriptionValid(true);\n    else setIsDescriptionValid(false);\n  };\n\n  const handleClose = () => {\n    const { name, about } = currentUser;\n    setName(name);\n    setDescription(about);\n    onClose();\n  };\n\n  const handleSubmit = () =>\n    onUpdaterUser({\n      name,\n      about: description,\n    });\n\n  return (\n    <PopupWithForm\n      name=\"EditForm\"\n      title=\"Редактировать профиль\"\n      isOpen={isOpen}\n      onClose={handleClose}\n      onSubmitForm={handleSubmit}\n      isValid={isValid}\n    >\n      <label className=\"form__field\">\n        <InputForm\n          placeholder=\"Введите имя\"\n          name=\"name\"\n          length={{ min: 2, max: 40 }}\n          pattern=\"[А-Яа-яёЁA-Za-z\\s-]*\"\n          required\n          value={name}\n          onInputChange={handleNameChange}\n        />\n        <ErrorSpan isActive={isNameValid} errorText={errorName} />\n      </label>\n      <label className=\"form__field\">\n        <InputForm\n          placeholder=\"Введите хобби\"\n          name=\"hobby\"\n          length={{ min: 2, max: 200 }}\n          required\n          value={description}\n          onInputChange={handleDescriptionChange}\n        />\n        <ErrorSpan isActive={isDescriptionValid} errorText={errorDescription} />\n      </label>\n      <ButtonSubmitForm text=\"Сохранить\" label=\"сохранить\" isActive={isValid} />\n    </PopupWithForm>\n  );\n}\n\nconst MemodEditProfilePopup = React.memo(EditProfilePopup);\nexport default MemodEditProfilePopup;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmitForm from './ui/ButtonSubmitForm';\nimport ErrorSpan from './ui/ErrorSpan';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdaterUserAvatar }) {\n  const inputUrl = useRef();\n\n  const [avatar, setAvatar] = useState('');\n  const [errorAvatar, setErrorAvatar] = useState('');\n  const [isAvatarValid, setIsAvatarValid] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n\n  useEffect(() => {\n    setAvatar('');\n    inputUrl.current.value = '';\n    hideErrors();\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (isAvatarValid) setIsValid(true);\n    return () => setIsValid(false);\n  }, [isAvatarValid]);\n\n  const hideErrors = () => {\n    setErrorAvatar('');\n    setIsAvatarValid(false);\n  };\n\n  const handleUrlChange = () => {\n    const { value, validationMessage, validity } = inputUrl.current;\n    setAvatar(value);\n    if (validationMessage !== errorAvatar) setErrorAvatar(validationMessage);\n    if (validity.valid) setIsAvatarValid(true);\n    else setIsAvatarValid(false);\n  };\n\n  const handleSubmit = () =>\n    onUpdaterUserAvatar({\n      avatar,\n    });\n\n  return (\n    <PopupWithForm\n      name=\"EditForm\"\n      title=\"Редактировать профиль\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmitForm={handleSubmit}\n    >\n      <label className=\"form__field\">\n        <input\n          type=\"url\"\n          className=\"input input_type_hobby form__input\"\n          placeholder=\"Ссылка на новый аватар\"\n          name=\"urlAvatar\"\n          id=\"avatar-input\"\n          required\n          ref={inputUrl}\n          onChange={handleUrlChange}\n        />\n        <ErrorSpan isActive={isAvatarValid} errorText={errorAvatar} />\n      </label>\n      <ButtonSubmitForm text=\"Сохранить\" label=\"сохранить\" isActive={isValid} />\n    </PopupWithForm>\n  );\n}\n\nconst MemodEditAvatarPopup = React.memo(EditAvatarPopup);\nexport default MemodEditAvatarPopup;\n","import React, { useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmitForm from './ui/ButtonSubmitForm';\nimport InputForm from './ui/InputForm';\nimport ErrorSpan from './ui/ErrorSpan';\n\nfunction AddPlacePopup({ isOpen, onClose, onPost }) {\n  const [name, setName] = useState();\n  const [link, setLink] = useState();\n  const [errorName, setErrorName] = useState('');\n  const [errorLink, setErrorLink] = useState('');\n  const [isNameValid, setIsNameValid] = useState(false);\n  const [isLinkValid, setIsLinkValid] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n\n  useEffect(() => {\n    setName('');\n    setLink('');\n    hideErrors();\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (isNameValid && isLinkValid) setIsValid(true);\n\n    return () => {\n      setIsValid(false);\n    };\n  }, [isNameValid, isLinkValid]);\n\n  const hideErrors = () => {\n    setErrorName('');\n    setErrorLink('');\n    setIsNameValid(false);\n    setIsLinkValid(false);\n  };\n\n  const handleNameChange = (evt) => {\n    const { value, validationMessage, validity } = evt.target;\n    setName(value);\n    if (validationMessage !== errorName) setErrorName(validationMessage);\n    if (validity.valid) setIsNameValid(true);\n    else setIsNameValid(false);\n  };\n\n  const handleLinkChange = (evt) => {\n    const { value, validationMessage, validity } = evt.target;\n    setLink(value);\n    if (validationMessage !== errorLink) setErrorLink(validationMessage);\n    if (validity.valid) setIsLinkValid(true);\n    else setIsLinkValid(false);\n  };\n\n  const handleSubmit = () => onPost({ name, link });\n\n  return (\n    <PopupWithForm\n      name=\"AddForm\"\n      title=\"Новое место\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmitForm={handleSubmit}\n    >\n      <label className=\"form__field\">\n        <InputForm\n          placeholder=\"Название места\"\n          name=\"place\"\n          required\n          length={{ min: 1, max: 30 }}\n          value={name}\n          onInputChange={handleNameChange}\n        />\n        <ErrorSpan isActive={isNameValid} errorText={errorName} />\n      </label>\n      <label className=\"form__field\">\n        <InputForm\n          type=\"url\"\n          placeholder=\"Ссылка на картинку\"\n          name=\"linkPlace\"\n          required\n          value={link}\n          onInputChange={handleLinkChange}\n        />\n        <ErrorSpan isActive={isLinkValid} errorText={errorLink} />\n      </label>\n      <ButtonSubmitForm text=\"Создать\" label=\"создать\" isActive={isValid} />\n    </PopupWithForm>\n  );\n}\n\nconst MemodAddPlacePopup = React.memo(AddPlacePopup);\nexport default MemodAddPlacePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm'; // !\nimport ButtonSubmitForm from './ui/ButtonSubmitForm';\n\nfunction DeletePlacePopup({ isOpen, onClose, onDelete }) {\n  return (\n    <PopupWithForm\n      name=\"DeleteForm\"\n      title=\"Вы уверены?\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmitForm={onDelete}\n    >\n      <ButtonSubmitForm text=\"Да\" label=\"подтвердить\" isActive={true} />\n    </PopupWithForm>\n  );\n}\n\nconst MemodDeletePlacePopup = React.memo(DeletePlacePopup);\nexport default MemodDeletePlacePopup;\n","class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getInitialData() {\n    return Promise.all([this._getUserInfo(), this._getInitialCards()]);\n  }\n\n  _returnResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Ошибка: ${response.status}`);\n  }\n\n  _getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._returnResponse);\n  }\n\n  _getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    })\n      .then(this._returnResponse)\n      .then((response) => {\n        this.myId = response._id;\n        return response;\n      });\n  }\n\n  updateUserInfo(body) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body),\n    }).then(this._returnResponse);\n  }\n\n  updateUserAvatar(body) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body),\n    }).then(this._returnResponse);\n  }\n\n  postCard(body) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(body),\n    }).then(this._returnResponse);\n  }\n\n  deleteCard({ cardId }) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._returnResponse);\n  }\n\n  likeCard({ isLiked, cardId }) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: this._headers,\n    })\n      .then(this._returnResponse)\n      .then((data) => data.likes);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n  headers: {\n    authorization: '71b91625-ec4b-4170-b042-4d00aa6f06b7',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n","import React, { useState, useEffect } from 'react';\nimport Main from './Main';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeletePlacePopup from './DeletePlacePopup';\n\nimport api from './../utils/Api';\n\nimport { CurrentUserContext } from './../contexts/CurrentUserContext';\nimport { StatusRenderContext } from './../contexts/StatusRenderContext';\n\nfunction AdventureBoard() {\n  const [isRenderer, setIsRenderer] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeletePlacePopupOpen, setIsDeletePlacePopupOpen] = useState(false);\n  const [isPreviewPopupOpen, setIsPreviewPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [selectedDeleteCardId, setSelectedDeleteCardId] = useState('');\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    api\n      .getInitialData()\n      .then(([userData, cardsData]) => {\n        setCurrentUser(userData);\n        setCards(cardsData);\n      })\n      .catch((error) => console.log(`Ошибка: ${error}`));\n  }, []);\n\n  const handlePreviewOpen = () => setIsPreviewPopupOpen(true);\n  const handleEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n  const handleEditProfileClick = () => setIsEditProfilePopupOpen(true);\n  const handleAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n  const handleDeletePlaceClick = ({ cardId }) => {\n    setIsDeletePlacePopupOpen(true);\n    setSelectedDeleteCardId(cardId);\n  };\n  const handleCloseAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeletePlacePopupOpen(false);\n    setIsPreviewPopupOpen(false);\n  };\n\n  const handleCardClick = (infoCard) => {\n    setSelectedCard(infoCard);\n    handlePreviewOpen();\n  };\n\n  const handleUpdaterUser = ({ name, about }) => {\n    setIsRenderer(true);\n    api\n      .updateUserInfo({ name, about })\n      .then((newUserData) => {\n        setCurrentUser(newUserData);\n        handleCloseAllPopups();\n        setIsRenderer(false);\n      })\n      .catch((error) => console.log(`Ошибка: ${error}`));\n  };\n\n  const handleUpdaterAvatar = ({ avatar }) => {\n    setIsRenderer(true);\n    api\n      .updateUserAvatar({ avatar })\n      .then((newUserData) => {\n        setCurrentUser(newUserData);\n        handleCloseAllPopups();\n        setIsRenderer(false);\n      })\n      .catch((error) => console.log(`Ошибка: ${error}`));\n  };\n\n  const handleCardLike = ({ likes, cardId }) => {\n    const isLiked = likes.some((owner) => owner._id === currentUser._id);\n    api\n      .likeCard({ isLiked, cardId })\n      .then((likes) => {\n        const newCards = cards.map((card) =>\n          card._id === cardId ? { ...card, likes: likes } : card\n        );\n        setCards(newCards);\n      })\n      .catch((error) => console.log(`Ошибка: ${error}`));\n  };\n\n  const handleCardDelete = () => {\n    setIsRenderer(true);\n    api\n      .deleteCard({ cardId: selectedDeleteCardId })\n      .then(() => {\n        const newCards = cards.filter(\n          (card) => card._id !== selectedDeleteCardId\n        );\n        setCards(newCards);\n        handleCloseAllPopups();\n        setIsRenderer(false);\n      })\n      .catch((error) => console.log(`Ошибка: ${error}`));\n  };\n\n  const handleAddPlace = ({ name, link }) => {\n    setIsRenderer(true);\n    api\n      .postCard({ name, link })\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        handleCloseAllPopups();\n        setIsRenderer(false);\n      })\n      .catch((error) => console.log(`Ошибка: ${error}`));\n  };\n\n  return (\n    <>\n      <CurrentUserContext.Provider value={currentUser}>\n        <Main\n          cards={cards}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          onCardLike={handleCardLike}\n          onConfirmDelete={handleDeletePlaceClick}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={handleCloseAllPopups}\n          onUpdaterUser={handleUpdaterUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={handleCloseAllPopups}\n          onUpdaterUserAvatar={handleUpdaterAvatar}\n        />\n      </CurrentUserContext.Provider>\n      <StatusRenderContext.Provider value={isRenderer}>\n        <ImagePopup\n          {...selectedCard}\n          isOpen={isPreviewPopupOpen}\n          onClose={handleCloseAllPopups}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={handleCloseAllPopups}\n          onPost={handleAddPlace}\n        />\n        <DeletePlacePopup\n          isOpen={isDeletePlacePopupOpen}\n          onClose={handleCloseAllPopups}\n          onDelete={handleCardDelete}\n        />\n      </StatusRenderContext.Provider>\n    </>\n  );\n}\n\nexport default AdventureBoard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport notFoundPage from './../images/404.png';\n\nfunction PageNotFound() {\n  return (\n    <div className=\"not-found\">\n      <h2 className=\"not-found__title\">\n        <span>404</span> - Страница не найдена\n      </h2>\n      <img className=\"not-found__image\" src={notFoundPage} alt=\"\" />\n      <p className=\"not-found__text\">Ой, опять Mesto</p>\n      <Link\n        className=\"btn btn_type_to-main not-found__to-main\"\n        to=\"/mesto-react/\"\n      >\n        Не уйти...\n      </Link>\n    </div>\n  );\n}\n\nexport default PageNotFound;\n","import React from 'react';\n\nimport logoHeader from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img\n        src={logoHeader}\n        alt=\"Изображение логотипа социальной сети Mesto Russia\"\n        className=\"logo header__logo \"\n      />\n    </header>\n  );\n}\n\nconst MemodHeader = React.memo(Header);\nexport default MemodHeader;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span className=\"footer__copyright\">© 2020 Mesto Russia</span>\n    </footer>\n  );\n}\n\nconst MemodFooter = React.memo(Footer);\nexport default MemodFooter;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport AdventureBoard from './AdventureBoard';\nimport PageNotFound from './PageNotFound';\nimport Header from './Header';\nimport Footer from './Footer';\n\nfunction App() {\n  return (\n    <div className=\"page\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/mesto-react/\">\n          <AdventureBoard />\n        </Route>\n        <Route path=\"*\">\n          <PageNotFound />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}