{"version":3,"sources":["components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/ui/ButtonClosePopup.js","components/ImagePopup.js","components/PopupWithForm.js","components/ui/ButtonSubmitForm.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logoHeader","alt","api","baseUrl","headers","this","_baseUrl","_headers","Promise","all","_getUserInfo","_getInitialCards","response","ok","json","reject","status","fetch","then","_returnResponse","myId","_id","body","method","JSON","stringify","idCard","data","likes","authorization","Card","link","name","isLiked","isMyCard","onCardClick","btnClasses","classnames","btn","onClick","length","type","aria-label","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","userId","setUserId","cards","setCards","useEffect","getInitialData","userInfo","initialCards","about","avatar","map","index","cardInfo","myCard","owner","myLike","find","key","Footer","ButtonClosePopup","onClose","optionalClasses","ImagePopup","popupClasses","popup","popup_disabled","id","PopupWithForm","title","isOpen","children","action","evt","preventDefault","ButtonSubmitForm","text","label","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","handleCloseAllPopups","infoCard","placeholder","required","minLength","maxLength","pattern","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.c9752746.chunk.js","sourcesContent":["import React from 'react';\nimport logoHeader from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <img\n        src={logoHeader}\n        alt=\"Изображение логотипа социальной сети Mesto Russia\"\n        className=\"logo header__logo \"\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getInitialData() {\n    return Promise.all([this._getUserInfo(), this._getInitialCards()]);\n  }\n\n  _returnResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Ошибка: ${response.status}`);\n  }\n\n  _getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._returnResponse);\n  }\n\n  _getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    })\n      .then(this._returnResponse)\n      .then((response) => {\n        this.myId = response._id;\n        return response;\n      });\n  }\n\n  updateUserInfo(body) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body),\n    }).then(this._returnResponse);\n  }\n\n  updateUserAvatar(body) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(body),\n    }).then(this._returnResponse);\n  }\n\n  postCard(body) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(body),\n    }).then(this._returnResponse);\n  }\n\n  deleteCard(idCard) {\n    return fetch(`${this._baseUrl}/cards/${idCard}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._returnResponse);\n  }\n\n  likeCard({ method, idCard }) {\n    return fetch(`${this._baseUrl}/cards/likes/${idCard}`, {\n      method: method,\n      headers: this._headers,\n    })\n      .then(this._returnResponse)\n      .then((data) => data.likes);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n  headers: {\n    authorization: '71b91625-ec4b-4170-b042-4d00aa6f06b7',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n","import React from 'react';\nimport classnames from 'classnames';\n\nfunction Card({ link, name, likes, isLiked = false, isMyCard, onCardClick }) {\n  const btnClasses = classnames({\n    btn: true,\n    ['btn_type_not-like']: !isLiked,\n    ['btn_type_like']: isLiked,\n    ['element__btn-like']: true,\n  });\n\n  function handleCardClick() {\n    onCardClick({ name, link }); // действительно ...\n  }\n\n  return (\n    <div className=\"element\">\n      <img\n        src={link}\n        alt={name}\n        className=\"element__img\"\n        onClick={handleCardClick}\n      />\n      <h2 className=\"element__title\">{name}</h2>\n      <span className=\"element__likes\">{likes.length}</span>\n      <button\n        type=\"button\"\n        aria-label=\"лайкнуть\"\n        className={btnClasses}\n      ></button>\n      {isMyCard && (\n        <button\n          type=\"button\"\n          aria-label=\"удалить\"\n          className=\"btn btn_type_trash element__btn-trash\"\n        ></button>\n      )}\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport api from '../utils/Api';\nimport Card from './Card';\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\n  const [userName, setUserName] = React.useState('');\n  const [userDescription, setUserDescription] = React.useState('');\n  const [userAvatar, setUserAvatar] = React.useState('');\n  const [userId, setUserId] = React.useState('');\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api.getInitialData().then(([userInfo, initialCards]) => {\n      setUserName(userInfo.name);\n      setUserDescription(userInfo.about);\n      setUserAvatar(userInfo.avatar);\n      setUserId(userInfo._id);\n      setCards(initialCards);\n    });\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <img\n          className=\"profile__photo\"\n          src={userAvatar}\n          alt=\"Фотография пользователя\"\n        />\n        <button\n          type=\"button\"\n          aria-label=\"обновить\"\n          className=\"btn btn_type_update profile__btn-update\"\n          onClick={onEditAvatar}\n        ></button>\n        <div className=\"profile__info\">\n          <h2 className=\"profile__user-name\">{userName}</h2>\n          <button\n            onClick={onEditProfile}\n            type=\"button\"\n            aria-label=\"редактировать\"\n            className=\"btn btn_type_edit profile__btn-edit\"\n          ></button>\n          <p className=\"profile__user-hobby\">{userDescription}</p>\n        </div>\n        <button\n          onClick={onAddPlace}\n          type=\"button\"\n          aria-label=\"добавить\"\n          className=\"btn btn_type_add profile__btn-add\"\n        ></button>\n      </section>\n      <section className=\"elements\">\n        {cards.map(({ _id, ...cardInfo }, index) => {\n          const myCard = cardInfo.owner._id === userId;\n          const myLike = cardInfo.likes.find((owner) => owner._id === userId);\n          return (\n            <Card\n              key={`${index}-${_id}`}\n              {...cardInfo}\n              onCardClick={onCardClick}\n              isMyCard={myCard}\n              isLiked={myLike}\n            />\n          );\n        })}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span className=\"footer__copyright\">© 2020 Mesto Russia</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport classnames from 'classnames';\n\nfunction ButtonClosePopup({ onClose, optionalClasses }) {\n  const btnClasses = classnames({\n    btn: true,\n    ['btn_type_close']: true,\n    ['popup__btn-close']: true,\n    [`${optionalClasses}`]: optionalClasses,\n  });\n\n  function handleClose() {\n    onClose();\n  }\n\n  return (\n    <button\n      type=\"button\"\n      aria-label=\"закрыть\"\n      className={btnClasses}\n      onClick={handleClose}\n    ></button>\n  );\n}\n\nexport default ButtonClosePopup;\n","import React from 'react';\nimport classnames from 'classnames';\nimport ButtonClosePopup from './ui/ButtonClosePopup';\n\nfunction ImagePopup({ name, link, onClose }) {\n  const popupClasses = classnames({\n    popup: true,\n    popup_disabled: !(name && link),\n  });\n\n  return (\n    <section className={popupClasses} id=\"popupCardPreview\">\n      <div className=\"popup__container\">\n        <section className=\"preview-image popup__preview\">\n          <ButtonClosePopup\n            onClose={onClose}\n            optionalClasses=\"preview-image__btn-close\"\n          />\n          <img\n            src={link}\n            alt={name}\n            className=\"preview-image__img popup__img\"\n          />\n          <h3 className=\"preview-image__title popup__title\">{name}</h3>\n        </section>\n      </div>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport classnames from 'classnames';\nimport ButtonClosePopup from './ui/ButtonClosePopup';\n\nfunction PopupWithForm({ name, title, isOpen, onClose, children }) {\n  const popupClasses = classnames({\n    popup: true,\n    popup_disabled: !isOpen,\n  });\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n  }\n\n  return (\n    <section className={popupClasses} id={`popup${name}`}>\n      <div className=\"popup__container\">\n        <ButtonClosePopup onClose={onClose} />\n        <h3 className=\"popup__title\">{title}</h3>\n        <form\n          name={name}\n          method=\"post\"\n          action=\"#\"\n          className=\"form popup__form\"\n          onClick={handleSubmit}\n        >\n          {children}\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ButtonSubmitForm({ text, label }) {\n  return (\n    <button\n      type=\"submit\"\n      className=\"btn btn_type_submit form__btn-submit\"\n      aria-label={label}\n    >\n      {text}\n    </button>\n  );\n}\n\nexport default ButtonSubmitForm;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmitForm from './ui/ButtonSubmitForm';\n\n/*\n    const isNeedClose = Проверка классов в этой ситуации - не лучшее решение.\n    Лучше установите обработчики события закрытия только там, \n    где они должны срабатывать, а не на родителях - повысит логичность кода и производительность\"\n\n    Если убрать проверку по классу, то приходится убрать закрытие попапа по клику по оверлею,\n    иначе любой клик по куда угодно закрывает попап.\n    Пытался найти \"stopPropagation\" наоборот, но как-то не задалось. \n*/\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(\n    false\n  );\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(\n    false\n  );\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(infoCard) {\n    setSelectedCard(infoCard);\n  }\n\n  function handleCloseAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n      <Footer />\n      <ImagePopup {...selectedCard} onClose={handleCloseAllPopups} />\n      <PopupWithForm\n        name=\"EditForm\"\n        title=\"Редактировать профиль\"\n        isOpen={isEditProfilePopupOpen}\n        onClose={handleCloseAllPopups}\n      >\n        <label className=\"form__field\">\n          <input\n            type=\"text\"\n            className=\"input input_type_name form__input\"\n            placeholder=\"Введите имя\"\n            name=\"name\"\n            id=\"user-name-input\"\n            required\n            minLength=\"2\"\n            maxLength=\"40\"\n            pattern=\"[А-Яа-яёЁA-Za-z\\s-]*\"\n          />\n          <span className=\"form__input-error\" id=\"user-name-input-error\"></span>\n        </label>\n        <label className=\"form__field\">\n          <input\n            type=\"text\"\n            className=\"input input_type_hobby form__input\"\n            placeholder=\"Введите хобби\"\n            name=\"hobby\"\n            id=\"hobby-input\"\n            required\n            minLength=\"2\"\n            maxLength=\"200\"\n            pattern=\".*\"\n          />\n          <span className=\"form__input-error\" id=\"hobby-input-error\"></span>\n        </label>\n        <ButtonSubmitForm text=\"Сохранить\" label=\"сохранить\" />\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"AddForm\"\n        title=\"Новое место\"\n        isOpen={isAddPlacePopupOpen}\n        onClose={handleCloseAllPopups}\n      >\n        <label className=\"form__field\">\n          <input\n            type=\"text\"\n            className=\"input input_type_name form__input\"\n            placeholder=\"Название\"\n            name=\"namePlace\"\n            id=\"place-input\"\n            required\n            minLength=\"1\"\n            maxLength=\"30\"\n            pattern=\".*\"\n          />\n          <span className=\"form__input-error\" id=\"place-input-error\"></span>\n        </label>\n        <label className=\"form__field\">\n          <input\n            type=\"url\"\n            className=\"input input_type_hobby form__input\"\n            placeholder=\"Ссылка на картинку\"\n            name=\"urlPic\"\n            id=\"url-input\"\n            required\n          />\n          <span className=\"form__input-error\" id=\"url-input-error\"></span>\n        </label>\n        <ButtonSubmitForm text=\"Создать\" label=\"создать\" />\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"UpdateAvatarForm\"\n        title=\"Обновить аватар\"\n        isOpen={isEditAvatarPopupOpen}\n        onClose={handleCloseAllPopups}\n      >\n        <label className=\"form__field\">\n          <input\n            type=\"url\"\n            className=\"input input_type_hobby form__input\"\n            placeholder=\"Ссылка на новый аватар\"\n            name=\"urlAvatar\"\n            id=\"avatar-input\"\n            required\n          />\n          <span className=\"form__input-error\" id=\"avatar-input-error\"></span>\n        </label>\n        <ButtonSubmitForm text=\"Сохранить\" label=\"сохранить\" />\n      </PopupWithForm>\n      <PopupWithForm\n        name=\"DeleteForm\"\n        title=\"Вы уверены?\"\n        onClose={handleCloseAllPopups}\n      >\n        <ButtonSubmitForm text=\"Да\" label=\"подтвердить\" />\n      </PopupWithForm>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}